use serde::{Serialize, Deserialize};
use crate::core::{Role, ToolCall};

/// Chat message.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Message {

    /// The role of the messages author.
    pub role: Role,

    /// The contents of the message.
    pub content: Option<String>,

    /// The tool calls generated by the model, such as function calls.
    ///
    /// Only specified in `assistant` responses that use tool calls.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub tool_calls: Option<Vec<ToolCall>>,

    /// Image inputs.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub images: Option<Vec<String>>,

    /// Thinking text traces (only for thinking models).
    #[serde(skip_serializing_if = "Option::is_none")]
    pub thinking: Option<String>,
}
